{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "WvR4UPwhEaLiTVtNpT9Fp",
      "type": "text",
      "x": 729.8599409698245,
      "y": -1619.8736371313237,
      "width": 234.3598175048828,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0o",
      "roundness": null,
      "seed": 205585602,
      "version": 2,
      "versionNonce": 300656734,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747481634439,
      "link": null,
      "locked": false,
      "text": "Functional Requirements",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Functional Requirements",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "CGNepHb4etCS5oTf7vNIl",
      "type": "text",
      "x": 730.2159754934256,
      "y": -1567.9806042496268,
      "width": 780.5595092773438,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0q",
      "roundness": null,
      "seed": 881482754,
      "version": 123,
      "versionNonce": 1834256670,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747481677976,
      "link": null,
      "locked": false,
      "text": "Users should be able to start group chats with multiple participants (limit 100).",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Users should be able to start group chats with multiple participants (limit 100).",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "K3X4-f8vxD18sdjdZmZzT",
      "type": "text",
      "x": 728.9680037101892,
      "y": -1534.0364427186787,
      "width": 464.19964599609375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0r",
      "roundness": null,
      "seed": 1960500510,
      "version": 140,
      "versionNonce": 174175582,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747481677976,
      "link": null,
      "locked": false,
      "text": "Users should be able to send/receive messages.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Users should be able to send/receive messages.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6LnR0V4pljyzaYIk8JuWC",
      "type": "text",
      "x": 729.1911033421853,
      "y": -1507.3131693947096,
      "width": 769.9395141601562,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0s",
      "roundness": null,
      "seed": 10718146,
      "version": 106,
      "versionNonce": 494885278,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747481677976,
      "link": null,
      "locked": false,
      "text": "Users should be able to receive messages sent while they are not online (up to\n30 days).",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Users should be able to receive messages sent while they are not online (up to 30 days).",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "e6yN0TzRxR4X3k25dVsdi",
      "type": "text",
      "x": 730.6275640025466,
      "y": -1451.7062224144663,
      "width": 602.3594970703125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0t",
      "roundness": null,
      "seed": 1979550046,
      "version": 136,
      "versionNonce": 2111731166,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747481677976,
      "link": null,
      "locked": false,
      "text": "Users should be able to send/receive media in their messages.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Users should be able to send/receive media in their messages.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "NlkBfqr_1TAdTMlXNya0Z",
      "type": "text",
      "x": 727.732801219394,
      "y": -1370.8712774778628,
      "width": 947.7593994140625,
      "height": 175,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0x",
      "roundness": null,
      "seed": 933379330,
      "version": 117,
      "versionNonce": 1146653698,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747481766036,
      "link": null,
      "locked": false,
      "text": "Non functional requirement\n\nMessages should be delivered to available users with low latency, < 500ms.\nWe should guarantee deliverability of messages - they should make their way to users.\nThe system should be able to handle billions of users with high throughput (we'll estimate later).\nMessages should be stored on centralized servers no longer than necessary.\nThe system should be resilient against failures of individual components.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Non functional requirement\n\nMessages should be delivered to available users with low latency, < 500ms.\nWe should guarantee deliverability of messages - they should make their way to users.\nThe system should be able to handle billions of users with high throughput (we'll estimate later).\nMessages should be stored on centralized servers no longer than necessary.\nThe system should be resilient against failures of individual components.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Qm_ePpirbD8aPziq4XpIT",
      "type": "text",
      "x": 743.0421166736326,
      "y": -1153.1095774056719,
      "width": 1490.09912109375,
      "height": 800,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0y",
      "roundness": null,
      "seed": 1724984862,
      "version": 2058,
      "versionNonce": 147393794,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747485170584,
      "link": null,
      "locked": false,
      "text": "High level\n\n1) Users should be able to start group chats with multiple participants (limit 100)\n\nhere you can talk about how you would store user in map like chatid: [user1, user2, user3, user4]\nso when user trigger event join group chat you would be like do some securtiy check then push the user \nin the array \n\nso next time user can send message to the chatid and you can broadcast the message to the group\n\nso we have a chat database with chatid and participantid, here we have two requirement to fetch the user in \nthe chat also fetch all the chat that user belong to so we can have partitioned by chatid so we can get all the\nparticipant of that chat since we partition by user id now if we query get chat for this user they can be in differnet\npartition so we can use global seconary index \n\n\n2) Users should be able to send/receive messages\n\nhere you can talk about how you would store user in map like userid: socketobject here you can talk about sending file to different chat\n\n\n3) Users should be able to receive messages sent while they are not online (up to 30 days).\n\nlike when trigger the event of send message we push the same messsage to kafka then it si consumed by some consumer and store in message and \ninbox database\n\nmessage => chatid, message, creator, s3link\ninbox => recipient, messageid\n\nyou must be asking why not query the message table directly and get user details by the time stmap here you can talk about devices littl elike how you\nneed to get message every time for website but in app the messages are store there but here the issue is the join the group late or left the group the\njoined he should'nt be able to view all the message so inbox table solve this issue",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "High level\n\n1) Users should be able to start group chats with multiple participants (limit 100)\n\nhere you can talk about how you would store user in map like chatid: [user1, user2, user3, user4]\nso when user trigger event join group chat you would be like do some securtiy check then push the user \nin the array \n\nso next time user can send message to the chatid and you can broadcast the message to the group\n\nso we have a chat database with chatid and participantid, here we have two requirement to fetch the user in \nthe chat also fetch all the chat that user belong to so we can have partitioned by chatid so we can get all the\nparticipant of that chat since we partition by user id now if we query get chat for this user they can be in differnet\npartition so we can use global seconary index \n\n\n2) Users should be able to send/receive messages\n\nhere you can talk about how you would store user in map like userid: socketobject here you can talk about sending file to different chat\n\n\n3) Users should be able to receive messages sent while they are not online (up to 30 days).\n\nlike when trigger the event of send message we push the same messsage to kafka then it si consumed by some consumer and store in message and \ninbox database\n\nmessage => chatid, message, creator, s3link\ninbox => recipient, messageid\n\nyou must be asking why not query the message table directly and get user details by the time stmap here you can talk about devices littl elike how you\nneed to get message every time for website but in app the messages are store there but here the issue is the join the group late or left the group the\njoined he should'nt be able to view all the message so inbox table solve this issue",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Y7pL16DtYao8cj6vn-oAy",
      "type": "text",
      "x": 752.2804918282104,
      "y": -287.3418486338087,
      "width": 1649.69873046875,
      "height": 975,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b10",
      "roundness": null,
      "seed": 2022249090,
      "version": 2137,
      "versionNonce": 1772723394,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1747489086334,
      "link": null,
      "locked": false,
      "text": "Deep Dives\n\n\nhere you can talk about layer 4 and layer 7 loadbalancer like how layer 4 loadbalance is like a single connection and layer 7 load balancer is like makes two\nhoops liek first it send http requirest to load balancer then the loadbalancer send the same http requirest to the server but in loadbalancer 4 it is single\ntcp connection you can also go deep here \n\nnow you can about about scaling now you scale the chat server but now explain how this can be issue since the server is statefull now expalin solutin how\nyou can use like kafka but it won't be a better  choose since like it i think does not support billion topic and kafka topic are very heavy \nand so on you can also talk about how you can use consistent hash ring and forward topic with same chatid to one server\n\n\n\n\n\n\n\n\n\n\n\nso don't recall much how this consistent hashing ring work but i think i need a zookeeper so like client go to ther chat registry is like i belong to whcih server\nhe is like server 1 then he need to send msg to user b now server find by useing zookeeper which server is userb is connected so to server 2,  so now server a write to \nserver b like this message , now message recieved on server b it now check the internal hashmap and send message to user b\n\nbiggest issue here is scaling like scaling like we need to move some user from one server to another\n\n in final move forward with redis then you can explain how socket.io is an inbuild library\nyou can use but that a way to much abstractionn that adds there\n\nhere server publish message to that userid then server subcribed to this recived and the message to user here you can go deep\n\nyou can talk about multiple devices like save array of array\n\n\n\n\n\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Deep Dives\n\n\nhere you can talk about layer 4 and layer 7 loadbalancer like how layer 4 loadbalance is like a single connection and layer 7 load balancer is like makes two\nhoops liek first it send http requirest to load balancer then the loadbalancer send the same http requirest to the server but in loadbalancer 4 it is single\ntcp connection you can also go deep here \n\nnow you can about about scaling now you scale the chat server but now explain how this can be issue since the server is statefull now expalin solutin how\nyou can use like kafka but it won't be a better  choose since like it i think does not support billion topic and kafka topic are very heavy \nand so on you can also talk about how you can use consistent hash ring and forward topic with same chatid to one server\n\n\n\n\n\n\n\n\n\n\n\nso don't recall much how this consistent hashing ring work but i think i need a zookeeper so like client go to ther chat registry is like i belong to whcih server\nhe is like server 1 then he need to send msg to user b now server find by useing zookeeper which server is userb is connected so to server 2,  so now server a write to \nserver b like this message , now message recieved on server b it now check the internal hashmap and send message to user b\n\nbiggest issue here is scaling like scaling like we need to move some user from one server to another\n\n in final move forward with redis then you can explain how socket.io is an inbuild library\nyou can use but that a way to much abstractionn that adds there\n\nhere server publish message to that userid then server subcribed to this recived and the message to user here you can go deep\n\nyou can talk about multiple devices like save array of array\n\n\n\n\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "zXkhAmtasEk5LkOm-UeKD",
      "type": "ellipse",
      "x": 742.5141773010469,
      "y": 64.50835657514665,
      "width": 102.41399548311506,
      "height": 98.19072215914593,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b12",
      "roundness": {
        "type": 2
      },
      "seed": 380801026,
      "version": 109,
      "versionNonce": 107012446,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "FaHvYWlV2SZzdY_7LETIm",
          "type": "arrow"
        },
        {
          "id": "ZwkiDBgXJIKbM-8MeEmyS",
          "type": "arrow"
        }
      ],
      "updated": 1747486155348,
      "link": null,
      "locked": false
    },
    {
      "id": "FmBLV7YpOmFsBdlSIdBHo",
      "type": "line",
      "x": 772.0770100165914,
      "y": 103.57341330320367,
      "width": 0,
      "height": 0,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b14",
      "roundness": {
        "type": 2
      },
      "seed": 1060028318,
      "version": 5,
      "versionNonce": 1527720130,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486037632,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          0,
          0
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "f8OwoPu7yBqRw6DVP3CUF",
      "type": "text",
      "x": 772.0770100165914,
      "y": 103.30944361691081,
      "width": 51.77995300292969,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b15",
      "roundness": null,
      "seed": 961110082,
      "version": 12,
      "versionNonce": 1909083522,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486044364,
      "link": null,
      "locked": false,
      "text": "client",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "client",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "9crU_6utvf_64jvDfI-LL",
      "type": "rectangle",
      "x": 915.6677794419868,
      "y": 6.438569889228916,
      "width": 144.64656761832794,
      "height": 70.73948582946673,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b16",
      "roundness": {
        "type": 3
      },
      "seed": 1100109058,
      "version": 27,
      "versionNonce": 1533924994,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "aVMYzc3QjZxEpNwfTC5qD"
        },
        {
          "id": "FaHvYWlV2SZzdY_7LETIm",
          "type": "arrow"
        },
        {
          "id": "FV4gvC-T6Xie8x9tNcuWA",
          "type": "arrow"
        }
      ],
      "updated": 1747486160630,
      "link": null,
      "locked": false
    },
    {
      "id": "aVMYzc3QjZxEpNwfTC5qD",
      "type": "text",
      "x": 924.3311129948031,
      "y": 29.30831280396228,
      "width": 127.31990051269531,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b17",
      "roundness": null,
      "seed": 1284608450,
      "version": 15,
      "versionNonce": 1488707074,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486055512,
      "link": null,
      "locked": false,
      "text": "chat registry",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "9crU_6utvf_64jvDfI-LL",
      "originalText": "chat registry",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "gQgnvHGCmnXtd-s4Eh2nj",
      "type": "rectangle",
      "x": 1168.007373784212,
      "y": 18.052430563726034,
      "width": 174.2093600577532,
      "height": 67.57221207902705,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b18",
      "roundness": {
        "type": 3
      },
      "seed": 1555678594,
      "version": 34,
      "versionNonce": 480747010,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "p1_taXm8OfJBJ2C87BzSd"
        },
        {
          "id": "6Sq4bFSFZLkvgrzsklUCK",
          "type": "arrow"
        },
        {
          "id": "FV4gvC-T6Xie8x9tNcuWA",
          "type": "arrow"
        }
      ],
      "updated": 1747486160630,
      "link": null,
      "locked": false
    },
    {
      "id": "p1_taXm8OfJBJ2C87BzSd",
      "type": "text",
      "x": 1206.4620904341823,
      "y": 39.33853660323956,
      "width": 97.2999267578125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b19",
      "roundness": null,
      "seed": 992083998,
      "version": 11,
      "versionNonce": 1506414302,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486064341,
      "link": null,
      "locked": false,
      "text": "zookeeper",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "gQgnvHGCmnXtd-s4Eh2nj",
      "originalText": "zookeeper",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "BRkJo8UW1InPZvuroArjy",
      "type": "rectangle",
      "x": 1086.7097046448228,
      "y": 124.6896993708101,
      "width": 177.3767546365507,
      "height": 71.79540485075734,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b1A",
      "roundness": {
        "type": 3
      },
      "seed": 1193176926,
      "version": 42,
      "versionNonce": 1292018142,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "QKWyGOyUyoTlbCUdN8V9h"
        },
        {
          "id": "6Sq4bFSFZLkvgrzsklUCK",
          "type": "arrow"
        },
        {
          "id": "ZwkiDBgXJIKbM-8MeEmyS",
          "type": "arrow"
        }
      ],
      "updated": 1747486155348,
      "link": null,
      "locked": false
    },
    {
      "id": "QKWyGOyUyoTlbCUdN8V9h",
      "type": "text",
      "x": 1119.738124077356,
      "y": 148.08740179618877,
      "width": 111.31991577148438,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b1B",
      "roundness": null,
      "seed": 675727426,
      "version": 13,
      "versionNonce": 1816575234,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486074183,
      "link": null,
      "locked": false,
      "text": "chat server",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "BRkJo8UW1InPZvuroArjy",
      "originalText": "chat server",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "FaHvYWlV2SZzdY_7LETIm",
      "type": "arrow",
      "x": 847.0398497222659,
      "y": 87.73619875249881,
      "width": 63.3488582028192,
      "height": 52.79071516901604,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b1H",
      "roundness": null,
      "seed": 1432139358,
      "version": 25,
      "versionNonce": 1934072286,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486146311,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          63.3488582028192,
          -52.79071516901604
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "zXkhAmtasEk5LkOm-UeKD",
        "focus": 0.20230078548018773,
        "gap": 8.474403132093041
      },
      "endBinding": {
        "elementId": "9crU_6utvf_64jvDfI-LL",
        "focus": 0.7479307541315173,
        "gap": 5.279071516901695
      },
      "startArrowhead": "arrow",
      "endArrowhead": "triangle",
      "elbowed": false
    },
    {
      "id": "6Sq4bFSFZLkvgrzsklUCK",
      "type": "arrow",
      "x": 1194.40273136872,
      "y": 132.08036727357683,
      "width": 20.060487874673754,
      "height": 48.56744184504703,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b1I",
      "roundness": null,
      "seed": 534291074,
      "version": 19,
      "versionNonce": 1613723586,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486152684,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          20.060487874673754,
          -48.56744184504703
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "BRkJo8UW1InPZvuroArjy",
        "focus": 0.06984439007202342,
        "gap": 7.390667902766722
      },
      "endBinding": {
        "elementId": "gQgnvHGCmnXtd-s4Eh2nj",
        "focus": 0.27276832855053956,
        "gap": 2.1117172142232903
      },
      "startArrowhead": "arrow",
      "endArrowhead": "triangle",
      "elbowed": false
    },
    {
      "id": "ZwkiDBgXJIKbM-8MeEmyS",
      "type": "arrow",
      "x": 852.3189212391674,
      "y": 106.7408884342401,
      "width": 239.66985492255685,
      "height": 60.181383071782875,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b1J",
      "roundness": null,
      "seed": 988356062,
      "version": 27,
      "versionNonce": 683214238,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486155348,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          239.66985492255685,
          60.181383071782875
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "zXkhAmtasEk5LkOm-UeKD",
        "focus": -0.34827399352566024,
        "gap": 7.82132912601082
      },
      "endBinding": {
        "elementId": "BRkJo8UW1InPZvuroArjy",
        "focus": -0.46897432708285014,
        "gap": 5.2790715169014675
      },
      "startArrowhead": "arrow",
      "endArrowhead": "triangle",
      "elbowed": false
    },
    {
      "id": "FV4gvC-T6Xie8x9tNcuWA",
      "type": "arrow",
      "x": 1059.2585488673822,
      "y": 42.33619176236891,
      "width": 111.91630004786634,
      "height": 1.0558787451712988,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b1K",
      "roundness": null,
      "seed": 1569604190,
      "version": 34,
      "versionNonce": 1265699742,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1747486167284,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          111.91630004786634,
          1.0558787451712988
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "9crU_6utvf_64jvDfI-LL",
        "focus": -0.004008005786558567,
        "gap": 1.0557981929325706
      },
      "endBinding": {
        "elementId": "gQgnvHGCmnXtd-s4Eh2nj",
        "focus": 0.22117948622897243,
        "gap": 3.1674751310365536
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}